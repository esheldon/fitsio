name: tests

on:
  push:
    branches:
      - master
  pull_request: null

env:
  PY_COLORS: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: tests
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        pyver: ["3.12", "3.11"]
        npver: ["1.26", "2.0"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830  # v3.1.1
        with:
          python-version: ${{ matrix.pyver }}
          channels: conda-forge
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest

      - name: install conda deps
        shell: bash -l {0}
        run: |
          conda list
          mamba install numpy=${{ matrix.npver }} nose cython wget make pytest flake8
          if [ "${{ matrix.pyver }}" == "3.8" ] || [ "${{ matrix.pyver }}" == "3.9" ] || [ "${{ matrix.pyver }}" == "3.10" ]; then
            mamba install importlib_resources
          fi

      - name: install bzip2 on linux
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libbz2-dev

      - name: build external cfitsio
        shell: bash -l {0}
        run: |
          mkdir cfitsio-external-build
          cd cfitsio-external-build
          wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.4.0.tar.gz
          tar -xzvf cfitsio-4.4.0.tar.gz
          cd cfitsio-4.4.0
          ./configure --disable-shared --prefix=$HOME/cfitsio-static-install
          make install -j 4
          cd ..
          cd ..

      - name: test non-bundled build
        shell: bash -l {0}
        run: |
          pip install -vv -e . \
            --global-option="build_ext" \
            --global-option="--use-system-fitsio" \
            --global-option="--system-fitsio-includedir=$HOME/cfitsio-static-install/include" \
            --global-option="--system-fitsio-libdir=$HOME/cfitsio-static-install/lib"
          SKIP_BZIP_TEST=true pytest -vv fitsio

      - name: test non-bundled build w/ env vars
        shell: bash -l {0}
        run: |
          rm -rf build*
          find . -name "*.so" -type f -delete
          export FITSIO_USE_SYSTEM_FITSIO=1
          export FITSIO_SYSTEM_FITSIO_INCLUDEDIR=$HOME/cfitsio-static-install/include
          export FITSIO_SYSTEM_FITSIO_LIBDIR=$HOME/cfitsio-static-install/lib
          pip install -vv -e .
          SKIP_BZIP_TEST=true pytest -vv fitsio

      - name: test bundled build
        shell: bash -l {0}
        run: |
          rm -rf build*
          rm -rf $HOME/cfitsio-static-install
          find . -name "*.so" -type f -delete
          pip install -vv -e .
          SKIP_BZIP_TEST=true pytest -vv fitsio

      - name: test install sdist .gz with no unit tests
        shell: bash -l {0}
        run: |
          rm -rf build*
          rm -rf $HOME/cfitsio-static-install
          find . -name "*.so" -type f -delete
          rm -rf dist

          python setup.py sdist

          pip install -vv --no-deps --no-build-isolation dist/*.tar.gz
          cd ..
          python -c "import fitsio; assert fitsio.__version__ != '0.0.0'"
          cd -
          pip uninstall fitsio --yes

      - name: test sdist
        shell: bash -l {0}
        run: |
          rm -rf build*
          rm -rf $HOME/cfitsio-static-install
          find . -name "*.so" -type f -delete
          rm -rf dist

          python setup.py sdist
          pushd dist/

          fname=$(ls fitsio*.gz)
          tar xvfz "$fname"
          dname=$(echo "$fname" | sed 's/\.tar\.gz//')
          pushd $dname

          pip install -vv -e .
          SKIP_BZIP_TEST=true pytest -vv fitsio

          popd
          popd

      - name: flake8
        shell: bash -l {0}
        run: |
          flake8 fitsio
