name: tests-external-cfitsio

on:
  push:
    branches:
      - master
  pull_request: null

env:
  PY_COLORS: "1"
  # These compiler flags force the tests to fail if arrays are
  # accessed at the C level from an unaligned location.
  TEST_CFLAGS: "-fsanitize=alignment -fno-sanitize-recover=alignment"
  LATEST_CFITSIO_VER: "-4.6.3"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests-external-cfitsio:
    name: tests-external-cfitsio
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        config:
          # 3.44 is the last version that did not support uint64
          - { pyver: "3.8", npver: "1", cftsver: "3440"}
          # 4.1.0 is the first version for which tests pass for uint64
          - { pyver: "3.8", npver: "1", cftsver: "-4.1.0"}
          - { pyver: "3.8", npver: "1", cftsver: "latest"}
          - { pyver: "3.13", npver: "2.3.0", cftsver: "latest"}

    runs-on: ${{ matrix.os }}
    env:
      PIP_OPTIONS: "--no-cache-dir --no-deps --no-build-isolation -v"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f  # v3.2.0
        with:
          python-version: ${{ matrix.config.pyver }}
          channels: conda-forge
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest

      - name: install conda deps
        shell: bash -l {0}
        run: |
          conda install \
            numpy=${{ matrix.config.npver }} \
            "setuptools-scm>=8" \
            wget \
            make \
            pytest \
            setuptools
          conda list

      - name: build external cfitsio
        shell: bash -l {0}
        run: |
          export CFLAGS="${CFLAGS} ${TEST_CFLAGS}"

          mkdir -p cfitsio-external-build
          cd cfitsio-external-build
          rm -rf *

          if [[ "${{ matrix.config.cftsver }}" == "latest" ]]; then
            cftsver=${LATEST_CFITSIO_VER}
          else
            cftsver="${{ matrix.config.cftsver }}"
          fi

          if [[ "${{ matrix.config.cftsver }}" == *3440* ]]; then
            config_flags=""
          else
            config_flags="--without-fortran --disable-shared"
          fi

          cfitsio_name=cfitsio${cftsver}
          wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/${cfitsio_name}.tar.gz
          cfitsio_dir=`tar -tzf ${cfitsio_name}.tar.gz | sed -n "1,1p" | cut -f1 -d"/"`
          tar -xzvf ${cfitsio_name}.tar.gz
          cd ${cfitsio_dir}
          CFLAGS="-fPIC" ./configure --prefix=$HOME/cfitsio-static-install ${config_flags}
          make install -j 4
          cd ..
          cd ..

      - name: test non-bundled build
        shell: bash -l {0}
        run: |
          export CFLAGS="${CFLAGS} ${TEST_CFLAGS}"

          pip install ${PIP_OPTIONS} -e . \
            --config-settings="--global-option=--use-system-fitsio" \
            --config-settings="--global-option=--system-fitsio-includedir=$HOME/cfitsio-static-install/include" \
            --config-settings="--global-option=--system-fitsio-libdir=$HOME/cfitsio-static-install/lib"
          SKIP_BZIP_TEST=true pytest -vv fitsio
          python -c "import fitsio; assert not fitsio.cfitsio_has_bzip2_support()"
          python -c "import fitsio; assert not fitsio.cfitsio_has_curl_support()"

      - name: install bzip2 on linux
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libbz2-dev

      - name: build external cfitsio w/ bzip2
        shell: bash -l {0}
        run: |
          export CFLAGS="${CFLAGS} ${TEST_CFLAGS}"

          mkdir -p cfitsio-external-build
          cd cfitsio-external-build
          rm -rf *

          if [[ "${{ matrix.config.cftsver }}" == "latest" ]]; then
            cftsver=${LATEST_CFITSIO_VER}
          else
            cftsver="${{ matrix.config.cftsver }}"
          fi

          if [[ "${{ matrix.config.cftsver }}" == *3440* ]]; then
            config_flags="--with-bzip2"
          else
            config_flags="--without-fortran --disable-shared --with-bzip2"
          fi

          cfitsio_name=cfitsio${cftsver}
          wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/${cfitsio_name}.tar.gz
          cfitsio_dir=`tar -tzf ${cfitsio_name}.tar.gz | sed -n "1,1p" | cut -f1 -d"/"`
          tar -xzvf ${cfitsio_name}.tar.gz
          cd ${cfitsio_dir}
          CFLAGS="-fPIC" ./configure --prefix=$HOME/cfitsio-static-install ${config_flags}
          make install -j 4
          cd ..
          cd ..

      - name: test non-bundled build w/ env vars w/ bzip2
        shell: bash -l {0}
        run: |
          export CFLAGS="${CFLAGS} ${TEST_CFLAGS}"

          pip cache purge
          rm -rf build*
          find . -name "*.so" -type f -delete
          export FITSIO_USE_SYSTEM_FITSIO=1
          export FITSIO_SYSTEM_FITSIO_INCLUDEDIR=$HOME/cfitsio-static-install/include
          export FITSIO_SYSTEM_FITSIO_LIBDIR=$HOME/cfitsio-static-install/lib
          pip install ${PIP_OPTIONS} -e .
          pytest -vv fitsio
          python -c "import fitsio; assert fitsio.cfitsio_has_bzip2_support()"
          python -c "import fitsio; assert not fitsio.cfitsio_has_curl_support()"
